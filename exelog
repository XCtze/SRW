local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")

local player = Players.LocalPlayer
local hwid = RbxAnalyticsService:GetClientId()
local GROUP_ID = 4717061

local WEBHOOKS = {
    ["Tester"] = "https://discord.com/api/webhooks/...",
    ["Dev"] = "https://discord.com/api/webhooks/...",
    ["Member"] = "https://discord.com/api/webhooks/..."
}

local suffixes = {
    "", "K", "M", "B", "T",
    "QD", "QN", "SX", "SP", "Oc", "No", "Dec",
    "UnD", "DD", "TD", "QdD", "QND", "SXD", 
    "SPD", "OD", "ND", "VN", "UVN", "DUOVN",
    "TREVN","QVN","SXVN","SPVN","OCVN","NOVN",
    "TRI","UTri","DuoTri","TreTri","QdTri","QnTri",
    "SxTri","SpTri","OcTri","NoTri","Qua","UQua",
    "DQua","TQua","QdQua","QnQua","SxQua",
    "SpQua","OcQua","NoQua","Qnt","UQnt","DQnt",
    "TQnt","QdQnt","QnQnt","SxQnt","SpQnt","OcQnt",
    "NoQnt","Sxa","USxa","DSxa","TSxa","QdSxa","QnSxa",
    "SxSxa","SpSxa","OcSxa","NoSxa","Spt","USpt","DSpt",
    "TSpt","QdSpt","QnSpt","SxSpt","SpSpt","OcSpt","NoSpt",
    "Oct","UOct","DOct","TOct","QdOct","QnOct","SxOct","SpOct",
    "OcOct","NoOct","Non","UNon","DNon","TNon","QdNon","QnNon",
    "SxNon","SpNon","OcNon","NoNon","Ce","UCe","DCe"
}


local function format_number(n)
    local i = 1
    while math.abs(n) >= 1000 and i < #suffixes do
        n = n / 1000
        i += 1
    end
    return string.format("%.2f%s", n, suffixes[i])
end

local function getRebClass(r)
    if r >= 75000 then return "W" elseif r >= 20000 then return "M" else return "L" end
end

local function getStatClass(e)
    local i = 1
    while math.abs(e) >= 1000 and i < #suffixes do
        e = e / 1000
        i += 1
    end
    if i >= 13 then return "W" elseif i >= 9 then return "M" else return "L" end
end

local function detectExecutor()
    local env = getfenv()
    if env and typeof(env) == "table" then
        if rawget(env, "syn") then return "Synapse X"
        elseif rawget(env, "fluxus") then return "Fluxus"
        elseif rawget(env, "is_sirhurt_closure") then return "SirHurt"
        elseif rawget(env, "KRNL_LOADED") then return "KRNL"
        elseif rawget(env, "WRD") then return "WRD"
        elseif rawget(env, "electron") then return "Electron"
        elseif rawget(env, "isexecutorclosure") then return "Delta"
        elseif identifyexecutor and type(identifyexecutor) == "function" then
            local success, result = pcall(identifyexecutor)
            if success and typeof(result) == "string" then return result end
        elseif iswindowactive then return "Arceus X"
        else return "Unknown"
        end
    end
    return "Undetectable"
end

local function run()
    local dataFolder = ReplicatedStorage:FindFirstChild("Datas")
    local playerData = dataFolder and dataFolder:FindFirstChild(player.UserId)
    local rebirths, energy = 0, 0
    local rebFound, energyFound = false, false

    if playerData then
        local reb = playerData:FindFirstChild("Rebirth")
        local eng = playerData:FindFirstChild("Energy")
        if reb then rebirths = reb.Value rebFound = true end
        if eng then energy = eng.Value energyFound = true end
    end

    local currentTime = os.date("%m/%d/%Y, %H:%M")
    local rebClass = getRebClass(rebirths)
    local statClass = getStatClass(energy)
    local formattedEnergy = format_number(energy)
    local role = player:GetRoleInGroup(GROUP_ID) or "Member"
    local webhook = WEBHOOKS[role] or WEBHOOKS["Member"]
    local executorName = detectExecutor()
    local jobId = game.JobId
    local placeId = game.PlaceId

    local desc = string.format(
        "User: `%s (@%s)`\nUser ID: `%d`\nGroup Rank: `%s`\nHWID: `%s`\nTime: `%s`\nExecutor: `%s`\nPlace ID: `%s`\nJob ID: `%s`",
        player.DisplayName, player.Name, player.UserId, role, hwid, currentTime, executorName, placeId, jobId
    )

    if not dataFolder then
        desc = desc .. "\n**⚠ Datas folder not found**"
    elseif not playerData then
        desc = desc .. "\n**⚠ Player data not found**"
    else
        if rebFound then
            desc = desc .. string.format("\nRebirths: `%d` (%s)", rebirths, rebClass)
        else
            desc = desc .. "\n**⚠ Rebirths not found**"
        end
        if energyFound then
            desc = desc .. string.format("\nEnergy: `%s` (%s)", formattedEnergy, statClass)
        else
            desc = desc .. "\n**⚠ Energy not found**"
        end
    end

    local payload = {
        content = "",
        embeds = { {
            title = "Exploit Logged - " .. player.DisplayName .. " (@" .. player.Name .. ")",
            description = desc,
            color = 16766720,
            footer = { text = "exploit detected" },
        }},
        username = "Exploit Logger",
        avatar_url = "https://cdn-icons-png.flaticon.com/512/5946/5946009.png"
    }

    local success, response = pcall(function()
        return HttpService:PostAsync(webhook, HttpService:JSONEncode(payload), Enum.HttpContentType.ApplicationJson)
    end)

    if not success then
        warn("Failed to send webhook log:", response)
    end
end

pcall(run)
